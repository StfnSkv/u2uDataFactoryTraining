{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sscaveeDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyBabsToRaw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Station",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "u2ublob/data/babs/sourcefolder/201508_station_data.csv"
							},
							{
								"name": "Destination",
								"value": "datalake/RAW/BABS/Station/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "station_id",
											"type": "String"
										},
										"sink": {
											"name": "station_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String"
										},
										"sink": {
											"name": "lat",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "long",
											"type": "String"
										},
										"sink": {
											"name": "long",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dockcount",
											"type": "String"
										},
										"sink": {
											"name": "dockcount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "landmark",
											"type": "String"
										},
										"sink": {
											"name": "landmark",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "installation",
											"type": "String"
										},
										"sink": {
											"name": "installation",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "StationCSV",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "StationParquet",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy_Trip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Station",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trip ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TripID",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Duration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Duration",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Station",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartStation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Terminal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartTerminal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Station",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndStation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Terminal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndTerminal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Bike #",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bike#",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Subscriber Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriberType",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZipCode",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TripCSV",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "TripParquet",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy_Weather",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Trip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PDT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PDT",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Mean TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MeanTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Min TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max Dew PointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxDewPointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MeanDew PointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MeanDewPointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Min DewpointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinDewpointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Wind SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxWindSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Wind SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanWindSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Gust SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxGustSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PrecipitationIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrecipitationIn",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " CloudCover",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " CloudCover",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Events",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Events",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " WindDirDegrees",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " WindDirDegrees",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Zip",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WeatherCSV",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "WeatherParquet",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy_Status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Weather",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "station_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "station_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "bikes_available",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bikes_available",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "docks_available",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "docks_available",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "time",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "StatusCSV",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "StatusParquet",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "TripsPerStation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy_Trip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TripsPerStation",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TripsPerStation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopySmallFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ListOfDataFiles",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "GetFileSize",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CurrentFile",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfSizeIsSmall",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(activity('GetFileSize').output.size, 200000)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy File",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "CurrentFile",
														"type": "DatasetReference",
														"parameters": {
															"FileName": "@item().name"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SmallFilesInLake",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripsPerStation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TripCSV",
								"type": "DatasetReference"
							},
							"name": "TripSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataLakeTemp",
								"type": "DatasetReference"
							},
							"name": "SinkIntoDataLake"
						}
					],
					"transformations": [
						{
							"name": "AggregateStartStation"
						},
						{
							"name": "AggregateEndStation"
						},
						{
							"name": "JoinStation"
						}
					],
					"script": "source(output(\n\t\t{Trip ID} as integer,\n\t\tDuration as short,\n\t\t{Start Date} as timestamp,\n\t\t{Start Station} as string,\n\t\t{Start Terminal} as short,\n\t\t{End Date} as timestamp,\n\t\t{End Station} as string,\n\t\t{End Terminal} as short,\n\t\t{Bike #} as short,\n\t\t{Subscriber Type} as string,\n\t\t{Zip Code} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true,\n\tinferDriftedColumnTypes: true) ~> TripSource\nTripSource aggregate(groupBy(StartStation = {Start Station}),\n\tCount = count({Trip ID}),\n\t\tDurationAvg = avg(Duration)) ~> AggregateStartStation\nTripSource aggregate(groupBy(EndStation = {End Station}),\n\tCount = count({Trip ID}),\n\t\tDurationAvg = avg(Duration)) ~> AggregateEndStation\nAggregateEndStation, AggregateStartStation join(EndStation == StartStation,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStation\nJoinStation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tmapColumn(\n\t\tEndStation,\n\t\tCount = AggregateEndStation@Count,\n\t\tDurationAvg = AggregateEndStation@DurationAvg,\n\t\tStartStation,\n\t\tCount = AggregateStartStation@Count,\n\t\tDurationAvg = AggregateStartStation@DurationAvg\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkIntoDataLake"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeTemp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "TEMP",
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}