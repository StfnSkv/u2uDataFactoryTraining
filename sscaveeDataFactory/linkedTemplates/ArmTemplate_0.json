{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sscaveeDataFactory"
		},
		"AzureDataLakeG2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeG2'"
		},
		"BLOBBabsStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BLOBBabsStorage'"
		},
		"AzureDataLakeG2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://u2usscaveedatalake.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeG2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeG2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeG2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOBBabsStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BLOBBabsStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StationDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW/BABS/Station",
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StationSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOBBabsStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201508_station_data.csv",
						"folderPath": "data/babs/sourcefolder",
						"container": "u2ublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "station_id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "long",
						"type": "String"
					},
					{
						"name": "dockcount",
						"type": "String"
					},
					{
						"name": "landmark",
						"type": "String"
					},
					{
						"name": "installation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOBBabsStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StatusDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW/BABS/Status",
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StatusSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOBBabsStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "status_data_2015.csv.gz",
						"folderPath": "data/babs/sourcefolder",
						"container": "u2ublob"
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOBBabsStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW/BABS/Trip",
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOBBabsStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201508_trip_data.csv",
						"folderPath": "data/babs/sourcefolder",
						"container": "u2ublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOBBabsStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW/BABS/Weather",
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOBBabsStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201508_weather_data.csv",
						"folderPath": "data/babs/sourcefolder",
						"container": "u2ublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOBBabsStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBabsToRaw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Station",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "u2ublob/data/babs/sourcefolder/201508_station_data.csv"
							},
							{
								"name": "Destination",
								"value": "datalake/RAW/BABS/Station/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "station_id",
											"type": "String"
										},
										"sink": {
											"name": "station_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String"
										},
										"sink": {
											"name": "lat",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "long",
											"type": "String"
										},
										"sink": {
											"name": "long",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dockcount",
											"type": "String"
										},
										"sink": {
											"name": "dockcount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "landmark",
											"type": "String"
										},
										"sink": {
											"name": "landmark",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "installation",
											"type": "String"
										},
										"sink": {
											"name": "installation",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "StationSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StationDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Trip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Station",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trip ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TripID",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Duration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Duration",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Station",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartStation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Start Terminal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartTerminal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Station",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndStation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "End Terminal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EndTerminal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Bike #",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bike#",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Subscriber Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriberType",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZipCode",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TripSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TripDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Weather",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Trip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PDT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PDT",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Mean TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MeanTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Min TemperatureF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinTemperatureF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max Dew PointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxDewPointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MeanDew PointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MeanDewPointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Min DewpointF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinDewpointF",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Max Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaxHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min Humidity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinHumidity",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min Sea Level PressureIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinSeaLevelPressureIn",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Min VisibilityMiles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MinVisibilityMiles",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Wind SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxWindSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Mean Wind SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MeanWindSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Max Gust SpeedMPH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " MaxGustSpeedMPH",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PrecipitationIn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrecipitationIn",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " CloudCover",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " CloudCover",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " Events",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Events",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " WindDirDegrees",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " WindDirDegrees",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Zip",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WeatherSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WeatherDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Weather",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "station_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "station_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "bikes_available",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bikes_available",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "docks_available",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "docks_available",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "time",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "StatusSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StatusDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StationSource')]",
				"[concat(variables('factoryId'), '/datasets/StationDestination')]",
				"[concat(variables('factoryId'), '/datasets/TripSource')]",
				"[concat(variables('factoryId'), '/datasets/TripDestination')]",
				"[concat(variables('factoryId'), '/datasets/WeatherSource')]",
				"[concat(variables('factoryId'), '/datasets/WeatherDestination')]",
				"[concat(variables('factoryId'), '/datasets/StatusSource')]",
				"[concat(variables('factoryId'), '/datasets/StatusDestination')]"
			]
		}
	]
}